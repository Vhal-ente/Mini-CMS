{
  "version": 3,
  "sources": ["../../../app/routes/articles._index.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/articles._index.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/articles._index.jsx\");\n  import.meta.hot.lastModified = \"1759507480698.8213\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData, Link, useSearchParams } from \"@remix-run/react\";\nimport { useState } from \"react\";\nimport { prisma } from \"../lib/db.server\";\nexport async function loader({\n  request\n}) {\n  const url = new URL(request.url);\n  const page = parseInt(url.searchParams.get(\"page\") || \"1\");\n  const pageSize = parseInt(url.searchParams.get(\"pageSize\") || \"10\");\n  const search = url.searchParams.get(\"search\") || \"\";\n  const skip = (page - 1) * pageSize;\n  const where = {};\n  if (search) {\n    where.OR = [{\n      title: {\n        contains: search,\n        mode: \"insensitive\"\n      }\n    }, {\n      category: {\n        contains: search,\n        mode: \"insensitive\"\n      }\n    }];\n  }\n  const [articles, total] = await Promise.all([prisma.article.findMany({\n    where,\n    skip,\n    take: pageSize,\n    orderBy: {\n      createdAt: \"desc\"\n    },\n    include: {\n      parent: true,\n      _count: {\n        select: {\n          children: true\n        }\n      }\n    }\n  }), prisma.article.count({\n    where\n  })]);\n  const totalPages = Math.ceil(total / pageSize);\n  return json({\n    articles,\n    total,\n    page,\n    pageSize,\n    totalPages\n  });\n}\nexport default function MyArticles() {\n  _s();\n  const {\n    articles,\n    total,\n    page,\n    pageSize,\n    totalPages\n  } = useLoaderData();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [activeTab, setActiveTab] = useState(\"all\");\n  const [searchTerm, setSearchTerm] = useState(searchParams.get(\"search\") || \"\");\n\n  // local list state so we can remove items after delete\n  const [list, setList] = useState(articles || []);\n  const getStatusColor = index => {\n    const colors = [\"blue\", \"yellow\", \"purple\", \"orange\"];\n    return colors[index % colors.length];\n  };\n  const getStatusBadge = color => {\n    const badges = {\n      blue: {\n        bg: \"bg-blue-100\",\n        text: \"text-blue-800\",\n        label: \"IEP\"\n      },\n      yellow: {\n        bg: \"bg-yellow-100\",\n        text: \"text-yellow-800\",\n        label: \"ALP\"\n      },\n      purple: {\n        bg: \"bg-purple-100\",\n        text: \"text-purple-800\",\n        label: \"MLP\"\n      },\n      orange: {\n        bg: \"bg-orange-100\",\n        text: \"text-orange-800\",\n        label: \"504\"\n      }\n    };\n    return badges[color] || badges.blue;\n  };\n  const getTimeColor = index => {\n    if (index === 0) return \"text-red-600\";\n    if (index <= 2) return \"text-orange-500\";\n    return \"text-yellow-600\";\n  };\n  const getRelativeTime = (date, index) => {\n    const times = [\"Past Due\", \"In 8 days\", \"In 11 days\", \"In 19 days\", \"In 28 days\", \"In 31 days\"];\n    return times[index % times.length];\n  };\n  const handleSearch = value => {\n    setSearchTerm(value);\n    const newParams = new URLSearchParams(searchParams);\n    if (value) {\n      newParams.set(\"search\", value);\n    } else {\n      newParams.delete(\"search\");\n    }\n    newParams.set(\"page\", \"1\");\n    setSearchParams(newParams);\n  };\n  const changePage = newPage => {\n    const newParams = new URLSearchParams(searchParams);\n    newParams.set(\"page\", newPage.toString());\n    setSearchParams(newParams);\n  };\n  const changePageSize = newSize => {\n    const newParams = new URLSearchParams(searchParams);\n    newParams.set(\"pageSize\", newSize.toString());\n    newParams.set(\"page\", \"1\");\n    setSearchParams(newParams);\n  };\n  async function handleDelete(id) {\n    const ok = window.confirm(\"Delete this article? This action cannot be undone.\");\n    if (!ok) return;\n    try {\n      const res = await fetch(`/articles/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          Accept: \"application/json\"\n        }\n      });\n      if (res.ok) {\n        setList(prev => prev.filter(a => a.id !== id));\n      } else {\n        const payload = await res.json().catch(() => ({}));\n        alert(payload.error || \"Delete failed\");\n      }\n    } catch (e) {\n      alert(\"Delete request failed\");\n    }\n  }\n  return <div className=\"min-h-screen bg-gray-50 p-8\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"mb-6\">\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-6\">My Articles</h1>\n\n          <div className=\"flex gap-6 border-b border-gray-200 mb-6\">\n            {[{\n            id: \"upcoming\",\n            label: \"Upcoming\"\n          }, {\n            id: \"draft\",\n            label: \"Draft\"\n          }, {\n            id: \"amendment\",\n            label: \"Amendment\"\n          }, {\n            id: \"active\",\n            label: \"Active\"\n          }, {\n            id: \"all\",\n            label: \"All (Most Recent)\"\n          }].map(tab => <button key={tab.id} onClick={() => setActiveTab(tab.id)} className={`pb-3 px-1 font-medium text-sm transition-colors ${activeTab === tab.id ? \"text-blue-600 border-b-2 border-blue-600\" : \"text-gray-600 hover:text-gray-900\"}`}>\n                {tab.label}\n              </button>)}\n          </div>\n\n          <div className=\"mb-6\">\n            <input type=\"text\" value={searchTerm} onChange={e => handleSearch(e.target.value)} placeholder=\"Filter by title or category...\" className=\"w-full max-w-md px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Title</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Updated</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Category</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n                <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n              </tr>\n            </thead>\n\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {list.map((article, index) => {\n              const statusColor = getStatusColor(index);\n              const statusBadge = getStatusBadge(statusColor);\n              const relativeTime = getRelativeTime(article.createdAt, index);\n              const timeColor = getTimeColor(index);\n              return <tr key={article.id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4\">\n                      <div className=\"text-sm font-medium text-gray-900\">{article.title}</div>\n                      <div className=\"text-sm text-gray-500\">{((article.content || \"\") + \"\").substring(0, 80)}...</div>\n                    </td>\n\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className={`text-sm font-medium ${timeColor}`}>{relativeTime}</div>\n                      <div className=\"text-sm text-gray-500\">\n                        {new Date(article.createdAt).toLocaleDateString(\"en-US\", {\n                      month: \"numeric\",\n                      day: \"numeric\",\n                      year: \"numeric\"\n                    })}\n                      </div>\n                    </td>\n\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center gap-1\">\n                        {[...Array(5)].map((_, i) => <svg key={i} className={`w-3 h-3 ${i < index % 5 ? \"text-blue-500\" : \"text-gray-300\"}`} fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                            <circle cx=\"10\" cy=\"10\" r=\"10\" />\n                          </svg>)}\n                      </div>\n                      <div className=\"text-sm text-gray-500 mt-1\">\n                        Last Update: {index === 0 ? \"less than a minute ago\" : `${index + 1} months ago`}\n                      </div>\n                    </td>\n\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`px-3 py-1 inline-flex items-center gap-1 text-xs leading-5 font-semibold rounded-full ${statusBadge.bg} ${statusBadge.text}`}>\n                        <span className=\"w-2 h-2 rounded-full bg-current\" />\n                        {statusBadge.label}\n                      </span>\n                    </td>\n\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className=\"px-3 py-1 inline-flex items-center gap-1 text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">\n                        <span className=\"w-2 h-2 rounded-full bg-current\" />\n                        Draft\n                      </span>\n                    </td>\n\n                    <td className=\"px-6 py-4 whitespace-nowrap text-right\">\n                      <Link to={`/articles/${article.id}`} className=\"inline-block px-4 py-2 text-sm font-medium text-indigo-700 bg-indigo-50 border border-indigo-200 rounded-md hover:bg-indigo-100 transition mr-2\">\n                        View\n                      </Link>\n\n                      <button onClick={() => handleDelete(article.id)} className=\"inline-block px-4 py-2 text-sm font-medium text-red-700 bg-red-50 border border-red-200 rounded-md hover:bg-red-100 transition\">\n                        Delete\n                      </button>\n                    </td>\n                  </tr>;\n            })}\n            </tbody>\n          </table>\n\n          <div className=\"bg-white px-6 py-4 flex items-center justify-between border-t border-gray-200\">\n            <div className=\"flex items-center gap-4\">\n              <span className=\"text-sm text-gray-700\">{total} Record{total !== 1 ? \"s\" : \"\"}</span>\n              <div className=\"flex items-center gap-2\">\n                <span className=\"text-sm text-gray-700\">Records per page</span>\n                <select value={pageSize} onChange={e => changePageSize(parseInt(e.target.value))} className=\"px-3 py-1 border border-gray-300 rounded-md text-sm focus:ring-2 focus:ring-blue-500\">\n                  <option value=\"10\">10</option>\n                  <option value=\"20\">20</option>\n                  <option value=\"50\">50</option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"flex items-center gap-4\">\n              <span className=\"text-sm text-gray-700\">Page {page} of {totalPages}</span>\n              <div className=\"flex items-center gap-2\">\n                <button onClick={() => changePage(1)} disabled={page === 1} className=\"p-2 rounded-md hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed\">\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 19l-7-7 7-7m8 14l-7-7 7-7\" /></svg>\n                </button>\n                <button onClick={() => changePage(Math.max(1, page - 1))} disabled={page === 1} className=\"p-2 rounded-md hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed\">\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" /></svg>\n                </button>\n                <button onClick={() => changePage(Math.min(totalPages, page + 1))} disabled={page === totalPages} className=\"p-2 rounded-md hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed\">\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" /></svg>\n                </button>\n                <button onClick={() => changePage(totalPages)} disabled={page === totalPages} className=\"p-2 rounded-md hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed\">\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 5l7 7-7 7M5 5l7 7-7 7\" /></svg>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>;\n}\n_s(MyArticles, \"8V3ejNp0dFldeematSXdK1d/ApM=\", false, function () {\n  return [useLoaderData, useSearchParams];\n});\n_c = MyArticles;\nvar _c;\n$RefreshReg$(_c, \"MyArticles\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react"]
}
